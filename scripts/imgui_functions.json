{
  "DestroyContext": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiContext* ctx =",
        "name": "NULL"
      }
    ]
  },
  "SetCurrentContext": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiContext*",
        "name": "ctx"
      }
    ]
  },
  "NewFrame": {
    "return_type": "void",
    "args": []
  },
  "EndFrame": {
    "return_type": "void",
    "args": []
  },
  "Render": {
    "return_type": "void",
    "args": []
  },
  "ShowDemoWindow": {
    "return_type": "void",
    "args": [
      {
        "type": "bool* p_open =",
        "name": "NULL"
      }
    ]
  },
  "ShowMetricsWindow": {
    "return_type": "void",
    "args": [
      {
        "type": "bool* p_open =",
        "name": "NULL"
      }
    ]
  },
  "ShowDebugLogWindow": {
    "return_type": "void",
    "args": [
      {
        "type": "bool* p_open =",
        "name": "NULL"
      }
    ]
  },
  "ShowIDStackToolWindow": {
    "return_type": "void",
    "args": [
      {
        "type": "bool* p_open =",
        "name": "NULL"
      }
    ]
  },
  "ShowAboutWindow": {
    "return_type": "void",
    "args": [
      {
        "type": "bool* p_open =",
        "name": "NULL"
      }
    ]
  },
  "ShowStyleEditor": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiStyle* ref =",
        "name": "NULL"
      }
    ]
  },
  "ShowStyleSelector": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      }
    ]
  },
  "ShowFontSelector": {
    "return_type": "void",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      }
    ]
  },
  "ShowUserGuide": {
    "return_type": "void",
    "args": []
  },
  "StyleColorsDark": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiStyle* dst =",
        "name": "NULL"
      }
    ]
  },
  "StyleColorsLight": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiStyle* dst =",
        "name": "NULL"
      }
    ]
  },
  "StyleColorsClassic": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiStyle* dst =",
        "name": "NULL"
      }
    ]
  },
  "Begin": {
    "return_type": "bool",
    "args": [
      {
        "type": "char*",
        "name": "name"
      },
      {
        "type": "bool*",
        "name": "p_open"
      },
      {
        "type": "ImVec2",
        "name": "size_first_use"
      },
      {
        "type": "float bg_alpha =",
        "name": "-1.0f"
      },
      {
        "type": "ImGuiWindowFlags",
        "name": "flags=0"
      }
    ]
  },
  "End": {
    "return_type": "void",
    "args": []
  },
  "EndChild": {
    "return_type": "void",
    "args": []
  },
  "IsWindowAppearing": {
    "return_type": "bool",
    "args": []
  },
  "IsWindowCollapsed": {
    "return_type": "bool",
    "args": []
  },
  "IsWindowFocused": {
    "return_type": "bool",
    "args": [
      {
        "type": "ImGuiFocusedFlags",
        "name": "flags=0"
      }
    ]
  },
  "IsWindowHovered": {
    "return_type": "bool",
    "args": [
      {
        "type": "ImGuiHoveredFlags",
        "name": "flags=0"
      }
    ]
  },
  "GetWindowPos": {
    "return_type": "ImVec2",
    "args": []
  },
  "GetWindowSize": {
    "return_type": "ImVec2",
    "args": []
  },
  "GetWindowWidth": {
    "return_type": "float",
    "args": []
  },
  "GetWindowHeight": {
    "return_type": "float",
    "args": []
  },
  "SetNextWindowSize": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "size"
      },
      {
        "type": "ImGuiCond cond =",
        "name": "0"
      }
    ]
  },
  "SetNextWindowSizeConstraints": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "size_min"
      },
      {
        "type": "const ImVec2&",
        "name": "size_max"
      },
      {
        "type": "ImGuiSizeCallback custom_callback =",
        "name": "NULL"
      },
      {
        "type": "void* custom_callback_data =",
        "name": "NULL"
      }
    ]
  },
  "SetNextWindowContentSize": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "size"
      }
    ]
  },
  "SetNextWindowCollapsed": {
    "return_type": "void",
    "args": [
      {
        "type": "bool",
        "name": "collapsed"
      },
      {
        "type": "ImGuiCond cond =",
        "name": "0"
      }
    ]
  },
  "SetNextWindowFocus": {
    "return_type": "void",
    "args": []
  },
  "SetNextWindowScroll": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "scroll"
      }
    ]
  },
  "SetNextWindowBgAlpha": {
    "return_type": "void",
    "args": [
      {
        "type": "float",
        "name": "alpha"
      }
    ]
  },
  "SetWindowPos": {
    "return_type": "void",
    "args": [
      {
        "type": "const char*",
        "name": "name"
      },
      {
        "type": "const ImVec2&",
        "name": "pos"
      },
      {
        "type": "ImGuiCond cond =",
        "name": "0"
      }
    ]
  },
  "SetWindowSize": {
    "return_type": "void",
    "args": [
      {
        "type": "const char*",
        "name": "name"
      },
      {
        "type": "const ImVec2&",
        "name": "size"
      },
      {
        "type": "ImGuiCond cond =",
        "name": "0"
      }
    ]
  },
  "SetWindowCollapsed": {
    "return_type": "void",
    "args": [
      {
        "type": "const char*",
        "name": "name"
      },
      {
        "type": "bool",
        "name": "collapsed"
      },
      {
        "type": "ImGuiCond cond =",
        "name": "0"
      }
    ]
  },
  "SetWindowFocus": {
    "return_type": "void",
    "args": [
      {
        "type": "const char*",
        "name": "name"
      }
    ]
  },
  "GetScrollX": {
    "return_type": "float",
    "args": []
  },
  "GetScrollY": {
    "return_type": "float",
    "args": []
  },
  "SetScrollX": {
    "return_type": "void",
    "args": [
      {
        "type": "float",
        "name": "scroll_x"
      }
    ]
  },
  "SetScrollY": {
    "return_type": "void",
    "args": [
      {
        "type": "float",
        "name": "scroll_y"
      }
    ]
  },
  "GetScrollMaxX": {
    "return_type": "float",
    "args": []
  },
  "GetScrollMaxY": {
    "return_type": "float",
    "args": []
  },
  "SetScrollHereX": {
    "return_type": "void",
    "args": [
      {
        "type": "float center_x_ratio =",
        "name": "0.5f"
      }
    ]
  },
  "SetScrollHereY": {
    "return_type": "void",
    "args": [
      {
        "type": "float center_y_ratio =",
        "name": "0.5f"
      }
    ]
  },
  "SetScrollFromPosX": {
    "return_type": "void",
    "args": [
      {
        "type": "float",
        "name": "local_x"
      },
      {
        "type": "float center_x_ratio =",
        "name": "0.5f"
      }
    ]
  },
  "SetScrollFromPosY": {
    "return_type": "void",
    "args": [
      {
        "type": "float",
        "name": "local_y"
      },
      {
        "type": "float center_y_ratio =",
        "name": "0.5f"
      }
    ]
  },
  "PushFont": {
    "return_type": "void",
    "args": [
      {
        "type": "ImFont*",
        "name": "font"
      },
      {
        "type": "float",
        "name": "font_size_base_unscaled"
      }
    ]
  },
  "PopFont": {
    "return_type": "void",
    "args": []
  },
  "GetFontSize": {
    "return_type": "float",
    "args": []
  },
  "PushStyleColor": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiCol",
        "name": "idx"
      },
      {
        "type": "const ImVec4&",
        "name": "col"
      }
    ]
  },
  "PopStyleColor": {
    "return_type": "void",
    "args": [
      {
        "type": "int count =",
        "name": "1"
      }
    ]
  },
  "PushStyleVar": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiStyleVar",
        "name": "idx"
      },
      {
        "type": "const ImVec2&",
        "name": "val"
      }
    ]
  },
  "PushStyleVarX": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiStyleVar",
        "name": "idx"
      },
      {
        "type": "float",
        "name": "val_x"
      }
    ]
  },
  "PushStyleVarY": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiStyleVar",
        "name": "idx"
      },
      {
        "type": "float",
        "name": "val_y"
      }
    ]
  },
  "PopStyleVar": {
    "return_type": "void",
    "args": [
      {
        "type": "int count =",
        "name": "1"
      }
    ]
  },
  "PushItemFlag": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiItemFlags",
        "name": "option"
      },
      {
        "type": "bool",
        "name": "enabled"
      }
    ]
  },
  "PopItemFlag": {
    "return_type": "void",
    "args": []
  },
  "PushItemWidth": {
    "return_type": "void",
    "args": [
      {
        "type": "float",
        "name": "item_width"
      }
    ]
  },
  "PopItemWidth": {
    "return_type": "void",
    "args": []
  },
  "SetNextItemWidth": {
    "return_type": "void",
    "args": [
      {
        "type": "float",
        "name": "item_width"
      }
    ]
  },
  "CalcItemWidth": {
    "return_type": "float",
    "args": []
  },
  "PushTextWrapPos": {
    "return_type": "void",
    "args": [
      {
        "type": "float wrap_local_pos_x =",
        "name": "0.0f"
      }
    ]
  },
  "PopTextWrapPos": {
    "return_type": "void",
    "args": []
  },
  "GetFontTexUvWhitePixel": {
    "return_type": "ImVec2",
    "args": []
  },
  "GetColorU32": {
    "return_type": "ImU32",
    "args": [
      {
        "type": "ImU32",
        "name": "col"
      },
      {
        "type": "float alpha_mul =",
        "name": "1.0f"
      }
    ]
  },
  "GetCursorScreenPos": {
    "return_type": "ImVec2",
    "args": []
  },
  "SetCursorScreenPos": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "pos"
      }
    ]
  },
  "GetContentRegionAvail": {
    "return_type": "ImVec2",
    "args": []
  },
  "GetCursorPos": {
    "return_type": "ImVec2",
    "args": []
  },
  "GetCursorPosX": {
    "return_type": "float",
    "args": []
  },
  "GetCursorPosY": {
    "return_type": "float",
    "args": []
  },
  "SetCursorPos": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "local_pos"
      }
    ]
  },
  "SetCursorPosX": {
    "return_type": "void",
    "args": [
      {
        "type": "float",
        "name": "local_x"
      }
    ]
  },
  "SetCursorPosY": {
    "return_type": "void",
    "args": [
      {
        "type": "float",
        "name": "local_y"
      }
    ]
  },
  "GetCursorStartPos": {
    "return_type": "ImVec2",
    "args": []
  },
  "Separator": {
    "return_type": "void",
    "args": []
  },
  "SameLine": {
    "return_type": "void",
    "args": [
      {
        "type": "float",
        "name": "offset_from_start_x=0.0f"
      },
      {
        "type": "float",
        "name": "spacing=-1.0f"
      }
    ]
  },
  "NewLine": {
    "return_type": "void",
    "args": []
  },
  "Spacing": {
    "return_type": "void",
    "args": []
  },
  "Dummy": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "size"
      }
    ]
  },
  "Indent": {
    "return_type": "void",
    "args": [
      {
        "type": "float indent_w =",
        "name": "0.0f"
      }
    ]
  },
  "Unindent": {
    "return_type": "void",
    "args": [
      {
        "type": "float indent_w =",
        "name": "0.0f"
      }
    ]
  },
  "BeginGroup": {
    "return_type": "void",
    "args": []
  },
  "EndGroup": {
    "return_type": "void",
    "args": []
  },
  "AlignTextToFramePadding": {
    "return_type": "void",
    "args": []
  },
  "GetTextLineHeight": {
    "return_type": "float",
    "args": []
  },
  "GetTextLineHeightWithSpacing": {
    "return_type": "float",
    "args": []
  },
  "GetFrameHeight": {
    "return_type": "float",
    "args": []
  },
  "GetFrameHeightWithSpacing": {
    "return_type": "float",
    "args": []
  },
  "PushID": {
    "return_type": "void",
    "args": [
      {
        "type": "int",
        "name": "int_id"
      }
    ]
  },
  "PopID": {
    "return_type": "void",
    "args": []
  },
  "GetID": {
    "return_type": "ImGuiID",
    "args": [
      {
        "type": "int",
        "name": "int_id"
      }
    ]
  },
  "TextUnformatted": {
    "return_type": "void",
    "args": [
      {
        "type": "const char*",
        "name": "text"
      },
      {
        "type": "const char* text_end =",
        "name": "NULL"
      }
    ]
  },
  "SeparatorText": {
    "return_type": "void",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      }
    ]
  },
  "SmallButton": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      }
    ]
  },
  "InvisibleButton": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "str_id"
      },
      {
        "type": "const ImVec2&",
        "name": "size"
      },
      {
        "type": "ImGuiButtonFlags flags =",
        "name": "0"
      }
    ]
  },
  "ArrowButton": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "str_id"
      },
      {
        "type": "ImGuiDir",
        "name": "dir"
      }
    ]
  },
  "Checkbox": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "bool*",
        "name": "v"
      }
    ]
  },
  "CheckboxFlags": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "unsigned int*",
        "name": "flags"
      },
      {
        "type": "unsigned int",
        "name": "flags_value"
      }
    ]
  },
  "RadioButton": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "int*",
        "name": "v"
      },
      {
        "type": "int",
        "name": "v_button"
      }
    ]
  },
  "Bullet": {
    "return_type": "void",
    "args": []
  },
  "TextLink": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      }
    ]
  },
  "TextLinkOpenURL": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "const char* url =",
        "name": "NULL"
      }
    ]
  },
  "BeginCombo": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "const char*",
        "name": "preview_value"
      },
      {
        "type": "ImGuiComboFlags flags =",
        "name": "0"
      }
    ]
  },
  "EndCombo": {
    "return_type": "void",
    "args": []
  },
  "Combo": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "int*",
        "name": "current_item"
      },
      {
        "type": "const char*",
        "name": "items_separated_by_zeros"
      },
      {
        "type": "int popup_max_height_in_items =",
        "name": "-1"
      }
    ]
  },
  "DragFloat": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "float*",
        "name": "v"
      },
      {
        "type": "float v_speed =",
        "name": "1.0f"
      },
      {
        "type": "float v_min =",
        "name": "0.0f"
      },
      {
        "type": "float v_max =",
        "name": "0.0f"
      },
      {
        "type": "const char* format =",
        "name": "\"%.3f\""
      },
      {
        "type": "ImGuiSliderFlags flags =",
        "name": "0"
      }
    ]
  },
  "DragFloat2": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "float",
        "name": "v[2]"
      },
      {
        "type": "float v_speed =",
        "name": "1.0f"
      },
      {
        "type": "float v_min =",
        "name": "0.0f"
      },
      {
        "type": "float v_max =",
        "name": "0.0f"
      },
      {
        "type": "const char* format =",
        "name": "\"%.3f\""
      },
      {
        "type": "ImGuiSliderFlags flags =",
        "name": "0"
      }
    ]
  },
  "DragFloat3": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "float",
        "name": "v[3]"
      },
      {
        "type": "float v_speed =",
        "name": "1.0f"
      },
      {
        "type": "float v_min =",
        "name": "0.0f"
      },
      {
        "type": "float v_max =",
        "name": "0.0f"
      },
      {
        "type": "const char* format =",
        "name": "\"%.3f\""
      },
      {
        "type": "ImGuiSliderFlags flags =",
        "name": "0"
      }
    ]
  },
  "DragFloat4": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "float",
        "name": "v[4]"
      },
      {
        "type": "float v_speed =",
        "name": "1.0f"
      },
      {
        "type": "float v_min =",
        "name": "0.0f"
      },
      {
        "type": "float v_max =",
        "name": "0.0f"
      },
      {
        "type": "const char* format =",
        "name": "\"%.3f\""
      },
      {
        "type": "ImGuiSliderFlags flags =",
        "name": "0"
      }
    ]
  },
  "DragFloatRange2": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "float*",
        "name": "v_current_min"
      },
      {
        "type": "float*",
        "name": "v_current_max"
      },
      {
        "type": "float v_speed =",
        "name": "1.0f"
      },
      {
        "type": "float v_min =",
        "name": "0.0f"
      },
      {
        "type": "float v_max =",
        "name": "0.0f"
      },
      {
        "type": "const char* format =",
        "name": "\"%.3f\""
      },
      {
        "type": "const char* format_max =",
        "name": "NULL"
      },
      {
        "type": "ImGuiSliderFlags flags =",
        "name": "0"
      }
    ]
  },
  "DragInt": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "int*",
        "name": "v"
      },
      {
        "type": "float v_speed =",
        "name": "1.0f"
      },
      {
        "type": "int v_min =",
        "name": "0"
      },
      {
        "type": "int v_max =",
        "name": "0"
      },
      {
        "type": "const char* format =",
        "name": "\"%d\""
      },
      {
        "type": "ImGuiSliderFlags flags =",
        "name": "0"
      }
    ]
  },
  "DragInt2": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "int",
        "name": "v[2]"
      },
      {
        "type": "float v_speed =",
        "name": "1.0f"
      },
      {
        "type": "int v_min =",
        "name": "0"
      },
      {
        "type": "int v_max =",
        "name": "0"
      },
      {
        "type": "const char* format =",
        "name": "\"%d\""
      },
      {
        "type": "ImGuiSliderFlags flags =",
        "name": "0"
      }
    ]
  },
  "DragInt3": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "int",
        "name": "v[3]"
      },
      {
        "type": "float v_speed =",
        "name": "1.0f"
      },
      {
        "type": "int v_min =",
        "name": "0"
      },
      {
        "type": "int v_max =",
        "name": "0"
      },
      {
        "type": "const char* format =",
        "name": "\"%d\""
      },
      {
        "type": "ImGuiSliderFlags flags =",
        "name": "0"
      }
    ]
  },
  "DragInt4": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "int",
        "name": "v[4]"
      },
      {
        "type": "float v_speed =",
        "name": "1.0f"
      },
      {
        "type": "int v_min =",
        "name": "0"
      },
      {
        "type": "int v_max =",
        "name": "0"
      },
      {
        "type": "const char* format =",
        "name": "\"%d\""
      },
      {
        "type": "ImGuiSliderFlags flags =",
        "name": "0"
      }
    ]
  },
  "DragIntRange2": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "int*",
        "name": "v_current_min"
      },
      {
        "type": "int*",
        "name": "v_current_max"
      },
      {
        "type": "float v_speed =",
        "name": "1.0f"
      },
      {
        "type": "int v_min =",
        "name": "0"
      },
      {
        "type": "int v_max =",
        "name": "0"
      },
      {
        "type": "const char* format =",
        "name": "\"%d\""
      },
      {
        "type": "const char* format_max =",
        "name": "NULL"
      },
      {
        "type": "ImGuiSliderFlags flags =",
        "name": "0"
      }
    ]
  },
  "DragScalar": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "ImGuiDataType",
        "name": "data_type"
      },
      {
        "type": "void*",
        "name": "p_data"
      },
      {
        "type": "float v_speed =",
        "name": "1.0f"
      },
      {
        "type": "const void* p_min =",
        "name": "NULL"
      },
      {
        "type": "const void* p_max =",
        "name": "NULL"
      },
      {
        "type": "const char* format =",
        "name": "NULL"
      },
      {
        "type": "ImGuiSliderFlags flags =",
        "name": "0"
      }
    ]
  },
  "DragScalarN": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "ImGuiDataType",
        "name": "data_type"
      },
      {
        "type": "void*",
        "name": "p_data"
      },
      {
        "type": "int",
        "name": "components"
      },
      {
        "type": "float",
        "name": "v_speed"
      },
      {
        "type": "const void*",
        "name": "p_min"
      },
      {
        "type": "const void*",
        "name": "p_max"
      },
      {
        "type": "const char*",
        "name": "format"
      },
      {
        "type": "float power =",
        "name": "1.0f"
      }
    ]
  },
  "SliderFloat": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "float*",
        "name": "v"
      },
      {
        "type": "float",
        "name": "v_min"
      },
      {
        "type": "float",
        "name": "v_max"
      },
      {
        "type": "const char* format =",
        "name": "\"%.3f\""
      },
      {
        "type": "ImGuiSliderFlags flags =",
        "name": "0"
      }
    ]
  },
  "SliderFloat2": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "float",
        "name": "v[2]"
      },
      {
        "type": "float",
        "name": "v_min"
      },
      {
        "type": "float",
        "name": "v_max"
      },
      {
        "type": "const char* format =",
        "name": "\"%.3f\""
      },
      {
        "type": "ImGuiSliderFlags flags =",
        "name": "0"
      }
    ]
  },
  "SliderFloat3": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "float",
        "name": "v[3]"
      },
      {
        "type": "float",
        "name": "v_min"
      },
      {
        "type": "float",
        "name": "v_max"
      },
      {
        "type": "const char* format =",
        "name": "\"%.3f\""
      },
      {
        "type": "ImGuiSliderFlags flags =",
        "name": "0"
      }
    ]
  },
  "SliderFloat4": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "float",
        "name": "v[4]"
      },
      {
        "type": "float",
        "name": "v_min"
      },
      {
        "type": "float",
        "name": "v_max"
      },
      {
        "type": "const char* format =",
        "name": "\"%.3f\""
      },
      {
        "type": "ImGuiSliderFlags flags =",
        "name": "0"
      }
    ]
  },
  "SliderAngle": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "float*",
        "name": "v_rad"
      },
      {
        "type": "float v_degrees_min =",
        "name": "-360.0f"
      },
      {
        "type": "float v_degrees_max =",
        "name": "+360.0f"
      },
      {
        "type": "const char* format = \"%.0f",
        "name": "deg\""
      },
      {
        "type": "ImGuiSliderFlags flags =",
        "name": "0"
      }
    ]
  },
  "SliderInt": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "int*",
        "name": "v"
      },
      {
        "type": "int",
        "name": "v_min"
      },
      {
        "type": "int",
        "name": "v_max"
      },
      {
        "type": "const char* format =",
        "name": "\"%d\""
      },
      {
        "type": "ImGuiSliderFlags flags =",
        "name": "0"
      }
    ]
  },
  "SliderInt2": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "int",
        "name": "v[2]"
      },
      {
        "type": "int",
        "name": "v_min"
      },
      {
        "type": "int",
        "name": "v_max"
      },
      {
        "type": "const char* format =",
        "name": "\"%d\""
      },
      {
        "type": "ImGuiSliderFlags flags =",
        "name": "0"
      }
    ]
  },
  "SliderInt3": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "int",
        "name": "v[3]"
      },
      {
        "type": "int",
        "name": "v_min"
      },
      {
        "type": "int",
        "name": "v_max"
      },
      {
        "type": "const char* format =",
        "name": "\"%d\""
      },
      {
        "type": "ImGuiSliderFlags flags =",
        "name": "0"
      }
    ]
  },
  "SliderInt4": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "int",
        "name": "v[4]"
      },
      {
        "type": "int",
        "name": "v_min"
      },
      {
        "type": "int",
        "name": "v_max"
      },
      {
        "type": "const char* format =",
        "name": "\"%d\""
      },
      {
        "type": "ImGuiSliderFlags flags =",
        "name": "0"
      }
    ]
  },
  "SliderScalar": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "ImGuiDataType",
        "name": "data_type"
      },
      {
        "type": "void*",
        "name": "p_data"
      },
      {
        "type": "const void*",
        "name": "p_min"
      },
      {
        "type": "const void*",
        "name": "p_max"
      },
      {
        "type": "const char*",
        "name": "format"
      },
      {
        "type": "float power =",
        "name": "1.0f"
      }
    ]
  },
  "SliderScalarN": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "ImGuiDataType",
        "name": "data_type"
      },
      {
        "type": "void*",
        "name": "p_data"
      },
      {
        "type": "int",
        "name": "components"
      },
      {
        "type": "const void*",
        "name": "p_min"
      },
      {
        "type": "const void*",
        "name": "p_max"
      },
      {
        "type": "const char*",
        "name": "format"
      },
      {
        "type": "float power =",
        "name": "1.0f"
      }
    ]
  },
  "VSliderFloat": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "const ImVec2&",
        "name": "size"
      },
      {
        "type": "float*",
        "name": "v"
      },
      {
        "type": "float",
        "name": "v_min"
      },
      {
        "type": "float",
        "name": "v_max"
      },
      {
        "type": "const char* format =",
        "name": "\"%.3f\""
      },
      {
        "type": "ImGuiSliderFlags flags =",
        "name": "0"
      }
    ]
  },
  "VSliderInt": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "const ImVec2&",
        "name": "size"
      },
      {
        "type": "int*",
        "name": "v"
      },
      {
        "type": "int",
        "name": "v_min"
      },
      {
        "type": "int",
        "name": "v_max"
      },
      {
        "type": "const char* format =",
        "name": "\"%d\""
      },
      {
        "type": "ImGuiSliderFlags flags =",
        "name": "0"
      }
    ]
  },
  "VSliderScalar": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "const ImVec2&",
        "name": "size"
      },
      {
        "type": "ImGuiDataType",
        "name": "data_type"
      },
      {
        "type": "void*",
        "name": "p_data"
      },
      {
        "type": "const void*",
        "name": "p_min"
      },
      {
        "type": "const void*",
        "name": "p_max"
      },
      {
        "type": "const char* format =",
        "name": "NULL"
      },
      {
        "type": "ImGuiSliderFlags flags =",
        "name": "0"
      }
    ]
  },
  "InputText": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "char*",
        "name": "buf"
      },
      {
        "type": "size_t",
        "name": "buf_size"
      },
      {
        "type": "ImGuiInputTextFlags flags =",
        "name": "0"
      },
      {
        "type": "ImGuiInputTextCallback callback =",
        "name": "NULL"
      },
      {
        "type": "void* user_data =",
        "name": "NULL"
      }
    ]
  },
  "InputTextWithHint": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "const char*",
        "name": "hint"
      },
      {
        "type": "char*",
        "name": "buf"
      },
      {
        "type": "size_t",
        "name": "buf_size"
      },
      {
        "type": "ImGuiInputTextFlags flags =",
        "name": "0"
      },
      {
        "type": "ImGuiInputTextCallback callback =",
        "name": "NULL"
      },
      {
        "type": "void* user_data =",
        "name": "NULL"
      }
    ]
  },
  "InputFloat": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "float*",
        "name": "v"
      },
      {
        "type": "float step =",
        "name": "0.0f"
      },
      {
        "type": "float step_fast =",
        "name": "0.0f"
      },
      {
        "type": "const char* format =",
        "name": "\"%.3f\""
      },
      {
        "type": "ImGuiInputTextFlags flags =",
        "name": "0"
      }
    ]
  },
  "InputFloat2": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "float",
        "name": "v[2]"
      },
      {
        "type": "const char* format =",
        "name": "\"%.3f\""
      },
      {
        "type": "ImGuiInputTextFlags flags =",
        "name": "0"
      }
    ]
  },
  "InputFloat3": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "float",
        "name": "v[3]"
      },
      {
        "type": "const char* format =",
        "name": "\"%.3f\""
      },
      {
        "type": "ImGuiInputTextFlags flags =",
        "name": "0"
      }
    ]
  },
  "InputFloat4": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "float",
        "name": "v[4]"
      },
      {
        "type": "const char* format =",
        "name": "\"%.3f\""
      },
      {
        "type": "ImGuiInputTextFlags flags =",
        "name": "0"
      }
    ]
  },
  "InputInt": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "int*",
        "name": "v"
      },
      {
        "type": "int step =",
        "name": "1"
      },
      {
        "type": "int step_fast =",
        "name": "100"
      },
      {
        "type": "ImGuiInputTextFlags flags =",
        "name": "0"
      }
    ]
  },
  "InputInt2": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "int",
        "name": "v[2]"
      },
      {
        "type": "ImGuiInputTextFlags flags =",
        "name": "0"
      }
    ]
  },
  "InputInt3": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "int",
        "name": "v[3]"
      },
      {
        "type": "ImGuiInputTextFlags flags =",
        "name": "0"
      }
    ]
  },
  "InputInt4": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "int",
        "name": "v[4]"
      },
      {
        "type": "ImGuiInputTextFlags flags =",
        "name": "0"
      }
    ]
  },
  "InputDouble": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "double*",
        "name": "v"
      },
      {
        "type": "double step =",
        "name": "0.0"
      },
      {
        "type": "double step_fast =",
        "name": "0.0"
      },
      {
        "type": "const char* format =",
        "name": "\"%.6f\""
      },
      {
        "type": "ImGuiInputTextFlags flags =",
        "name": "0"
      }
    ]
  },
  "InputScalar": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "ImGuiDataType",
        "name": "data_type"
      },
      {
        "type": "void*",
        "name": "p_data"
      },
      {
        "type": "const void* p_step =",
        "name": "NULL"
      },
      {
        "type": "const void* p_step_fast =",
        "name": "NULL"
      },
      {
        "type": "const char* format =",
        "name": "NULL"
      },
      {
        "type": "ImGuiInputTextFlags flags =",
        "name": "0"
      }
    ]
  },
  "InputScalarN": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "ImGuiDataType",
        "name": "data_type"
      },
      {
        "type": "void*",
        "name": "p_data"
      },
      {
        "type": "int",
        "name": "components"
      },
      {
        "type": "const void* p_step =",
        "name": "NULL"
      },
      {
        "type": "const void* p_step_fast =",
        "name": "NULL"
      },
      {
        "type": "const char* format =",
        "name": "NULL"
      },
      {
        "type": "ImGuiInputTextFlags flags =",
        "name": "0"
      }
    ]
  },
  "ColorEdit3": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "float",
        "name": "col[3]"
      },
      {
        "type": "ImGuiColorEditFlags flags =",
        "name": "0"
      }
    ]
  },
  "ColorEdit4": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "float",
        "name": "col[4]"
      },
      {
        "type": "ImGuiColorEditFlags flags =",
        "name": "0"
      }
    ]
  },
  "ColorPicker3": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "float",
        "name": "col[3]"
      },
      {
        "type": "ImGuiColorEditFlags flags =",
        "name": "0"
      }
    ]
  },
  "ColorPicker4": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "float",
        "name": "col[4]"
      },
      {
        "type": "ImGuiColorEditFlags flags =",
        "name": "0"
      },
      {
        "type": "const float* ref_col =",
        "name": "NULL"
      }
    ]
  },
  "SetColorEditOptions": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiColorEditFlags",
        "name": "flags"
      }
    ]
  },
  "TreeNode": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      }
    ]
  },
  "TreeNodeEx": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "ImGuiTreeNodeFlags flags =",
        "name": "0"
      }
    ]
  },
  "TreePush": {
    "return_type": "void",
    "args": [
      {
        "type": "const void*",
        "name": "ptr_id"
      }
    ]
  },
  "TreePop": {
    "return_type": "void",
    "args": []
  },
  "GetTreeNodeToLabelSpacing": {
    "return_type": "float",
    "args": []
  },
  "CollapsingHeader": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "bool*",
        "name": "p_visible"
      },
      {
        "type": "ImGuiTreeNodeFlags flags =",
        "name": "0"
      }
    ]
  },
  "SetNextItemOpen": {
    "return_type": "void",
    "args": [
      {
        "type": "bool",
        "name": "is_open"
      },
      {
        "type": "ImGuiCond cond =",
        "name": "0"
      }
    ]
  },
  "SetNextItemStorageID": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiID",
        "name": "storage_id"
      }
    ]
  },
  "SetNextItemSelectionUserData": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiSelectionUserData",
        "name": "selection_user_data"
      }
    ]
  },
  "IsItemToggledSelection": {
    "return_type": "bool",
    "args": []
  },
  "EndListBox": {
    "return_type": "void",
    "args": []
  },
  "ListBox": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "int*",
        "name": "current_item"
      },
      {
        "type": "const char* const",
        "name": "items[]"
      },
      {
        "type": "int",
        "name": "items_count"
      },
      {
        "type": "int height_in_items =",
        "name": "-1"
      }
    ]
  },
  "Value": {
    "return_type": "void",
    "args": [
      {
        "type": "const char*",
        "name": "prefix"
      },
      {
        "type": "float",
        "name": "v"
      },
      {
        "type": "const char* float_format =",
        "name": "NULL"
      }
    ]
  },
  "BeginMenuBar": {
    "return_type": "bool",
    "args": []
  },
  "EndMenuBar": {
    "return_type": "void",
    "args": []
  },
  "BeginMainMenuBar": {
    "return_type": "bool",
    "args": []
  },
  "EndMainMenuBar": {
    "return_type": "void",
    "args": []
  },
  "BeginMenu": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "bool enabled =",
        "name": "true"
      }
    ]
  },
  "EndMenu": {
    "return_type": "void",
    "args": []
  },
  "MenuItem": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "const char*",
        "name": "shortcut"
      },
      {
        "type": "bool*",
        "name": "p_selected"
      },
      {
        "type": "bool enabled =",
        "name": "true"
      }
    ]
  },
  "BeginTooltip": {
    "return_type": "bool",
    "args": []
  },
  "EndTooltip": {
    "return_type": "void",
    "args": []
  },
  "BeginItemTooltip": {
    "return_type": "bool",
    "args": []
  },
  "BeginPopup": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "str_id"
      },
      {
        "type": "ImGuiWindowFlags flags =",
        "name": "0"
      }
    ]
  },
  "BeginPopupModal": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "name"
      },
      {
        "type": "bool* p_open =",
        "name": "NULL"
      },
      {
        "type": "ImGuiWindowFlags flags =",
        "name": "0"
      }
    ]
  },
  "EndPopup": {
    "return_type": "void",
    "args": []
  },
  "OpenPopup": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiID",
        "name": "id"
      },
      {
        "type": "ImGuiPopupFlags popup_flags =",
        "name": "0"
      }
    ]
  },
  "OpenPopupOnItemClick": {
    "return_type": "void",
    "args": [
      {
        "type": "const char* str_id =",
        "name": "NULL"
      },
      {
        "type": "ImGuiPopupFlags popup_flags =",
        "name": "1"
      }
    ]
  },
  "CloseCurrentPopup": {
    "return_type": "void",
    "args": []
  },
  "BeginPopupContextItem": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char* str_id =",
        "name": "NULL"
      },
      {
        "type": "ImGuiPopupFlags popup_flags =",
        "name": "1"
      }
    ]
  },
  "BeginPopupContextWindow": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char* str_id =",
        "name": "NULL"
      },
      {
        "type": "ImGuiPopupFlags popup_flags =",
        "name": "1"
      }
    ]
  },
  "BeginPopupContextVoid": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char* str_id =",
        "name": "NULL"
      },
      {
        "type": "ImGuiPopupFlags popup_flags =",
        "name": "1"
      }
    ]
  },
  "IsPopupOpen": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "str_id"
      },
      {
        "type": "ImGuiPopupFlags flags =",
        "name": "0"
      }
    ]
  },
  "EndTable": {
    "return_type": "void",
    "args": []
  },
  "TableNextRow": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiTableRowFlags row_flags =",
        "name": "0"
      },
      {
        "type": "float min_row_height =",
        "name": "0.0f"
      }
    ]
  },
  "TableNextColumn": {
    "return_type": "bool",
    "args": []
  },
  "TableSetColumnIndex": {
    "return_type": "bool",
    "args": [
      {
        "type": "int",
        "name": "column_n"
      }
    ]
  },
  "TableSetupColumn": {
    "return_type": "void",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "ImGuiTableColumnFlags flags =",
        "name": "0"
      },
      {
        "type": "float init_width_or_weight =",
        "name": "0.0f"
      },
      {
        "type": "ImGuiID user_id =",
        "name": "0"
      }
    ]
  },
  "TableSetupScrollFreeze": {
    "return_type": "void",
    "args": [
      {
        "type": "int",
        "name": "cols"
      },
      {
        "type": "int",
        "name": "rows"
      }
    ]
  },
  "TableHeader": {
    "return_type": "void",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      }
    ]
  },
  "TableHeadersRow": {
    "return_type": "void",
    "args": []
  },
  "TableAngledHeadersRow": {
    "return_type": "void",
    "args": []
  },
  "TableGetColumnCount": {
    "return_type": "int",
    "args": []
  },
  "TableGetColumnIndex": {
    "return_type": "int",
    "args": []
  },
  "TableGetRowIndex": {
    "return_type": "int",
    "args": []
  },
  "TableGetColumnFlags": {
    "return_type": "ImGuiTableColumnFlags",
    "args": [
      {
        "type": "int column_n =",
        "name": "-1"
      }
    ]
  },
  "TableSetColumnEnabled": {
    "return_type": "void",
    "args": [
      {
        "type": "int",
        "name": "column_n"
      },
      {
        "type": "bool",
        "name": "v"
      }
    ]
  },
  "TableGetHoveredColumn": {
    "return_type": "int",
    "args": []
  },
  "TableSetBgColor": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiTableBgTarget",
        "name": "target"
      },
      {
        "type": "ImU32",
        "name": "color"
      },
      {
        "type": "int column_n =",
        "name": "-1"
      }
    ]
  },
  "Columns": {
    "return_type": "void",
    "args": [
      {
        "type": "int count =",
        "name": "1"
      },
      {
        "type": "const char* id =",
        "name": "NULL"
      },
      {
        "type": "bool borders =",
        "name": "true"
      }
    ]
  },
  "NextColumn": {
    "return_type": "void",
    "args": []
  },
  "GetColumnIndex": {
    "return_type": "int",
    "args": []
  },
  "GetColumnWidth": {
    "return_type": "float",
    "args": [
      {
        "type": "int column_index =",
        "name": "-1"
      }
    ]
  },
  "SetColumnWidth": {
    "return_type": "void",
    "args": [
      {
        "type": "int",
        "name": "column_index"
      },
      {
        "type": "float",
        "name": "width"
      }
    ]
  },
  "GetColumnOffset": {
    "return_type": "float",
    "args": [
      {
        "type": "int column_index =",
        "name": "-1"
      }
    ]
  },
  "SetColumnOffset": {
    "return_type": "void",
    "args": [
      {
        "type": "int",
        "name": "column_index"
      },
      {
        "type": "float",
        "name": "offset_x"
      }
    ]
  },
  "GetColumnsCount": {
    "return_type": "int",
    "args": []
  },
  "BeginTabBar": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "str_id"
      },
      {
        "type": "ImGuiTabBarFlags flags =",
        "name": "0"
      }
    ]
  },
  "EndTabBar": {
    "return_type": "void",
    "args": []
  },
  "BeginTabItem": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "bool* p_open =",
        "name": "NULL"
      },
      {
        "type": "ImGuiTabItemFlags flags =",
        "name": "0"
      }
    ]
  },
  "EndTabItem": {
    "return_type": "void",
    "args": []
  },
  "TabItemButton": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "label"
      },
      {
        "type": "ImGuiTabItemFlags flags =",
        "name": "0"
      }
    ]
  },
  "SetTabItemClosed": {
    "return_type": "void",
    "args": [
      {
        "type": "const char*",
        "name": "tab_or_docked_window_label"
      }
    ]
  },
  "LogToTTY": {
    "return_type": "void",
    "args": [
      {
        "type": "int auto_open_depth =",
        "name": "-1"
      }
    ]
  },
  "LogToFile": {
    "return_type": "void",
    "args": [
      {
        "type": "int auto_open_depth =",
        "name": "-1"
      },
      {
        "type": "const char* filename =",
        "name": "NULL"
      }
    ]
  },
  "LogToClipboard": {
    "return_type": "void",
    "args": [
      {
        "type": "int auto_open_depth =",
        "name": "-1"
      }
    ]
  },
  "LogFinish": {
    "return_type": "void",
    "args": []
  },
  "LogButtons": {
    "return_type": "void",
    "args": []
  },
  "BeginDragDropSource": {
    "return_type": "bool",
    "args": [
      {
        "type": "ImGuiDragDropFlags flags =",
        "name": "0"
      }
    ]
  },
  "SetDragDropPayload": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "type"
      },
      {
        "type": "const void*",
        "name": "data"
      },
      {
        "type": "size_t",
        "name": "sz"
      },
      {
        "type": "ImGuiCond cond =",
        "name": "0"
      }
    ]
  },
  "EndDragDropSource": {
    "return_type": "void",
    "args": []
  },
  "BeginDragDropTarget": {
    "return_type": "bool",
    "args": []
  },
  "EndDragDropTarget": {
    "return_type": "void",
    "args": []
  },
  "BeginDisabled": {
    "return_type": "void",
    "args": [
      {
        "type": "bool disabled =",
        "name": "true"
      }
    ]
  },
  "EndDisabled": {
    "return_type": "void",
    "args": []
  },
  "PushClipRect": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "clip_rect_min"
      },
      {
        "type": "const ImVec2&",
        "name": "clip_rect_max"
      },
      {
        "type": "bool intersect_with_current_clip_rect =",
        "name": "false"
      }
    ]
  },
  "PopClipRect": {
    "return_type": "void",
    "args": []
  },
  "SetItemDefaultFocus": {
    "return_type": "void",
    "args": []
  },
  "SetKeyboardFocusHere": {
    "return_type": "void",
    "args": [
      {
        "type": "int offset =",
        "name": "0"
      }
    ]
  },
  "SetNavCursorVisible": {
    "return_type": "void",
    "args": [
      {
        "type": "bool",
        "name": "visible"
      }
    ]
  },
  "SetNextItemAllowOverlap": {
    "return_type": "void",
    "args": []
  },
  "IsItemHovered": {
    "return_type": "bool",
    "args": [
      {
        "type": "ImGuiHoveredFlags flags =",
        "name": "0"
      }
    ]
  },
  "IsItemActive": {
    "return_type": "bool",
    "args": []
  },
  "IsItemFocused": {
    "return_type": "bool",
    "args": []
  },
  "IsItemClicked": {
    "return_type": "bool",
    "args": [
      {
        "type": "ImGuiMouseButton mouse_button =",
        "name": "0"
      }
    ]
  },
  "IsItemVisible": {
    "return_type": "bool",
    "args": []
  },
  "IsItemEdited": {
    "return_type": "bool",
    "args": []
  },
  "IsItemActivated": {
    "return_type": "bool",
    "args": []
  },
  "IsItemDeactivated": {
    "return_type": "bool",
    "args": []
  },
  "IsItemDeactivatedAfterEdit": {
    "return_type": "bool",
    "args": []
  },
  "IsItemToggledOpen": {
    "return_type": "bool",
    "args": []
  },
  "IsAnyItemHovered": {
    "return_type": "bool",
    "args": []
  },
  "IsAnyItemActive": {
    "return_type": "bool",
    "args": []
  },
  "IsAnyItemFocused": {
    "return_type": "bool",
    "args": []
  },
  "GetItemID": {
    "return_type": "ImGuiID",
    "args": []
  },
  "GetItemRectMin": {
    "return_type": "ImVec2",
    "args": []
  },
  "GetItemRectMax": {
    "return_type": "ImVec2",
    "args": []
  },
  "GetItemRectSize": {
    "return_type": "ImVec2",
    "args": []
  },
  "IsRectVisible": {
    "return_type": "bool",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "rect_min"
      },
      {
        "type": "const ImVec2&",
        "name": "rect_max"
      }
    ]
  },
  "GetTime": {
    "return_type": "double",
    "args": []
  },
  "GetFrameCount": {
    "return_type": "int",
    "args": []
  },
  "SetStateStorage": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiStorage*",
        "name": "storage"
      }
    ]
  },
  "CalcTextSize": {
    "return_type": "ImVec2",
    "args": [
      {
        "type": "const char*",
        "name": "text"
      },
      {
        "type": "const char* text_end =",
        "name": "NULL"
      },
      {
        "type": "bool hide_text_after_double_hash =",
        "name": "false"
      },
      {
        "type": "float wrap_width =",
        "name": "-1.0f"
      }
    ]
  },
  "ColorConvertU32ToFloat4": {
    "return_type": "ImVec4",
    "args": [
      {
        "type": "ImU32",
        "name": "in"
      }
    ]
  },
  "ColorConvertFloat4ToU32": {
    "return_type": "ImU32",
    "args": [
      {
        "type": "const ImVec4&",
        "name": "in"
      }
    ]
  },
  "ColorConvertRGBtoHSV": {
    "return_type": "void",
    "args": [
      {
        "type": "float",
        "name": "r"
      },
      {
        "type": "float",
        "name": "g"
      },
      {
        "type": "float",
        "name": "b"
      },
      {
        "type": "float&",
        "name": "out_h"
      },
      {
        "type": "float&",
        "name": "out_s"
      },
      {
        "type": "float&",
        "name": "out_v"
      }
    ]
  },
  "ColorConvertHSVtoRGB": {
    "return_type": "void",
    "args": [
      {
        "type": "float",
        "name": "h"
      },
      {
        "type": "float",
        "name": "s"
      },
      {
        "type": "float",
        "name": "v"
      },
      {
        "type": "float&",
        "name": "out_r"
      },
      {
        "type": "float&",
        "name": "out_g"
      },
      {
        "type": "float&",
        "name": "out_b"
      }
    ]
  },
  "IsKeyDown": {
    "return_type": "bool",
    "args": [
      {
        "type": "ImGuiKey",
        "name": "key"
      }
    ]
  },
  "IsKeyPressed": {
    "return_type": "bool",
    "args": [
      {
        "type": "ImGuiKey",
        "name": "key"
      },
      {
        "type": "bool repeat =",
        "name": "true"
      }
    ]
  },
  "IsKeyReleased": {
    "return_type": "bool",
    "args": [
      {
        "type": "ImGuiKey",
        "name": "key"
      }
    ]
  },
  "IsKeyChordPressed": {
    "return_type": "bool",
    "args": [
      {
        "type": "ImGuiKeyChord",
        "name": "key_chord"
      }
    ]
  },
  "GetKeyPressedAmount": {
    "return_type": "int",
    "args": [
      {
        "type": "ImGuiKey",
        "name": "key"
      },
      {
        "type": "float",
        "name": "repeat_delay"
      },
      {
        "type": "float",
        "name": "rate"
      }
    ]
  },
  "SetNextFrameWantCaptureKeyboard": {
    "return_type": "void",
    "args": [
      {
        "type": "bool",
        "name": "want_capture_keyboard"
      }
    ]
  },
  "Shortcut": {
    "return_type": "bool",
    "args": [
      {
        "type": "ImGuiKeyChord",
        "name": "key_chord"
      },
      {
        "type": "ImGuiInputFlags flags =",
        "name": "0"
      }
    ]
  },
  "SetNextItemShortcut": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiKeyChord",
        "name": "key_chord"
      },
      {
        "type": "ImGuiInputFlags flags =",
        "name": "0"
      }
    ]
  },
  "SetItemKeyOwner": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiKey",
        "name": "key"
      }
    ]
  },
  "IsMouseDown": {
    "return_type": "bool",
    "args": [
      {
        "type": "ImGuiMouseButton",
        "name": "button"
      }
    ]
  },
  "IsMouseClicked": {
    "return_type": "bool",
    "args": [
      {
        "type": "ImGuiMouseButton",
        "name": "button"
      },
      {
        "type": "bool repeat =",
        "name": "false"
      }
    ]
  },
  "IsMouseReleased": {
    "return_type": "bool",
    "args": [
      {
        "type": "ImGuiMouseButton",
        "name": "button"
      }
    ]
  },
  "IsMouseDoubleClicked": {
    "return_type": "bool",
    "args": [
      {
        "type": "ImGuiMouseButton",
        "name": "button"
      }
    ]
  },
  "IsMouseReleasedWithDelay": {
    "return_type": "bool",
    "args": [
      {
        "type": "ImGuiMouseButton",
        "name": "button"
      },
      {
        "type": "float",
        "name": "delay"
      }
    ]
  },
  "GetMouseClickedCount": {
    "return_type": "int",
    "args": [
      {
        "type": "ImGuiMouseButton",
        "name": "button"
      }
    ]
  },
  "IsMouseHoveringRect": {
    "return_type": "bool",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "r_min"
      },
      {
        "type": "const ImVec2&",
        "name": "r_max"
      },
      {
        "type": "bool clip =",
        "name": "true"
      }
    ]
  },
  "IsMousePosValid": {
    "return_type": "bool",
    "args": [
      {
        "type": "const ImVec2* mouse_pos =",
        "name": "NULL"
      }
    ]
  },
  "IsAnyMouseDown": {
    "return_type": "bool",
    "args": []
  },
  "GetMousePos": {
    "return_type": "ImVec2",
    "args": []
  },
  "GetMousePosOnOpeningCurrentPopup": {
    "return_type": "ImVec2",
    "args": []
  },
  "IsMouseDragging": {
    "return_type": "bool",
    "args": [
      {
        "type": "ImGuiMouseButton",
        "name": "button"
      },
      {
        "type": "float lock_threshold =",
        "name": "-1.0f"
      }
    ]
  },
  "GetMouseDragDelta": {
    "return_type": "ImVec2",
    "args": [
      {
        "type": "ImGuiMouseButton button =",
        "name": "0"
      },
      {
        "type": "float lock_threshold =",
        "name": "-1.0f"
      }
    ]
  },
  "ResetMouseDragDelta": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiMouseButton button =",
        "name": "0"
      }
    ]
  },
  "GetMouseCursor": {
    "return_type": "ImGuiMouseCursor",
    "args": []
  },
  "SetMouseCursor": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiMouseCursor",
        "name": "cursor_type"
      }
    ]
  },
  "SetNextFrameWantCaptureMouse": {
    "return_type": "void",
    "args": [
      {
        "type": "bool",
        "name": "want_capture_mouse"
      }
    ]
  },
  "SetClipboardText": {
    "return_type": "void",
    "args": [
      {
        "type": "const char*",
        "name": "text"
      }
    ]
  },
  "LoadIniSettingsFromDisk": {
    "return_type": "void",
    "args": [
      {
        "type": "const char*",
        "name": "ini_filename"
      }
    ]
  },
  "LoadIniSettingsFromMemory": {
    "return_type": "void",
    "args": [
      {
        "type": "const char*",
        "name": "ini_data"
      },
      {
        "type": "size_t",
        "name": "ini_size=0"
      }
    ]
  },
  "SaveIniSettingsToDisk": {
    "return_type": "void",
    "args": [
      {
        "type": "const char*",
        "name": "ini_filename"
      }
    ]
  },
  "DebugTextEncoding": {
    "return_type": "void",
    "args": [
      {
        "type": "const char*",
        "name": "text"
      }
    ]
  },
  "DebugFlashStyleColor": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiCol",
        "name": "idx"
      }
    ]
  },
  "DebugStartItemPicker": {
    "return_type": "void",
    "args": []
  },
  "DebugCheckVersionAndDataLayout": {
    "return_type": "bool",
    "args": [
      {
        "type": "const char*",
        "name": "version_str"
      },
      {
        "type": "size_t",
        "name": "sz_io"
      },
      {
        "type": "size_t",
        "name": "sz_style"
      },
      {
        "type": "size_t",
        "name": "sz_vec2"
      },
      {
        "type": "size_t",
        "name": "sz_vec4"
      },
      {
        "type": "size_t",
        "name": "sz_drawvert"
      },
      {
        "type": "size_t",
        "name": "sz_drawidx"
      }
    ]
  },
  "SetAllocatorFunctions": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiMemAllocFunc",
        "name": "alloc_func"
      },
      {
        "type": "ImGuiMemFreeFunc",
        "name": "free_func"
      },
      {
        "type": "void* user_data =",
        "name": "NULL"
      }
    ]
  },
  "GetAllocatorFunctions": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiMemAllocFunc*",
        "name": "p_alloc_func"
      },
      {
        "type": "ImGuiMemFreeFunc*",
        "name": "p_free_func"
      },
      {
        "type": "void**",
        "name": "p_user_data"
      }
    ]
  },
  "MemFree": {
    "return_type": "void",
    "args": [
      {
        "type": "void*",
        "name": "ptr"
      }
    ]
  },
  "ScaleAllSizes": {
    "return_type": "void",
    "args": [
      {
        "type": "float",
        "name": "scale_factor"
      }
    ]
  },
  "AddKeyEvent": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiKey",
        "name": "key"
      },
      {
        "type": "bool",
        "name": "down"
      }
    ]
  },
  "AddKeyAnalogEvent": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiKey",
        "name": "key"
      },
      {
        "type": "bool",
        "name": "down"
      },
      {
        "type": "float",
        "name": "v"
      }
    ]
  },
  "AddMousePosEvent": {
    "return_type": "void",
    "args": [
      {
        "type": "float",
        "name": "x"
      },
      {
        "type": "float",
        "name": "y"
      }
    ]
  },
  "AddMouseButtonEvent": {
    "return_type": "void",
    "args": [
      {
        "type": "int",
        "name": "button"
      },
      {
        "type": "bool",
        "name": "down"
      }
    ]
  },
  "AddMouseWheelEvent": {
    "return_type": "void",
    "args": [
      {
        "type": "float",
        "name": "wheel_x"
      },
      {
        "type": "float",
        "name": "wheel_y"
      }
    ]
  },
  "AddMouseSourceEvent": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiMouseSource",
        "name": "source"
      }
    ]
  },
  "AddFocusEvent": {
    "return_type": "void",
    "args": [
      {
        "type": "bool",
        "name": "focused"
      }
    ]
  },
  "AddInputCharacter": {
    "return_type": "void",
    "args": [
      {
        "type": "unsigned int",
        "name": "c"
      }
    ]
  },
  "AddInputCharacterUTF16": {
    "return_type": "void",
    "args": [
      {
        "type": "ImWchar16",
        "name": "c"
      }
    ]
  },
  "AddInputCharactersUTF8": {
    "return_type": "void",
    "args": [
      {
        "type": "const char*",
        "name": "str"
      }
    ]
  },
  "SetKeyEventNativeData": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiKey",
        "name": "key"
      },
      {
        "type": "int",
        "name": "native_keycode"
      },
      {
        "type": "int",
        "name": "native_scancode"
      },
      {
        "type": "int native_legacy_index =",
        "name": "-1"
      }
    ]
  },
  "SetAppAcceptingEvents": {
    "return_type": "void",
    "args": [
      {
        "type": "bool",
        "name": "accepting_events"
      }
    ]
  },
  "ClearEventsQueue": {
    "return_type": "void",
    "args": []
  },
  "ClearInputKeys": {
    "return_type": "void",
    "args": []
  },
  "ClearInputMouse": {
    "return_type": "void",
    "args": []
  },
  "ClearInputCharacters": {
    "return_type": "void",
    "args": []
  },
  "DeleteChars": {
    "return_type": "void",
    "args": [
      {
        "type": "int",
        "name": "pos"
      },
      {
        "type": "int",
        "name": "bytes_count"
      }
    ]
  },
  "InsertChars": {
    "return_type": "void",
    "args": [
      {
        "type": "int",
        "name": "pos"
      },
      {
        "type": "const char*",
        "name": "text"
      },
      {
        "type": "const char* text_end =",
        "name": "NULL"
      }
    ]
  },
  "Build": {
    "return_type": "bool",
    "args": []
  },
  "append": {
    "return_type": "void",
    "args": [
      {
        "type": "const char*",
        "name": "str"
      },
      {
        "type": "const char* str_end =",
        "name": "NULL"
      }
    ]
  },
  "SetInt": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiID",
        "name": "key"
      },
      {
        "type": "int",
        "name": "val"
      }
    ]
  },
  "SetBool": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiID",
        "name": "key"
      },
      {
        "type": "bool",
        "name": "val"
      }
    ]
  },
  "SetFloat": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiID",
        "name": "key"
      },
      {
        "type": "float",
        "name": "val"
      }
    ]
  },
  "SetVoidPtr": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiID",
        "name": "key"
      },
      {
        "type": "void*",
        "name": "val"
      }
    ]
  },
  "BuildSortByKey": {
    "return_type": "void",
    "args": []
  },
  "SetAllInt": {
    "return_type": "void",
    "args": [
      {
        "type": "int",
        "name": "val"
      }
    ]
  },
  "Step": {
    "return_type": "bool",
    "args": []
  },
  "IncludeItemsByIndex": {
    "return_type": "void",
    "args": [
      {
        "type": "int",
        "name": "item_begin"
      },
      {
        "type": "int",
        "name": "item_end"
      }
    ]
  },
  "SeekCursorForItem": {
    "return_type": "void",
    "args": [
      {
        "type": "int",
        "name": "item_index"
      }
    ]
  },
  "ApplyRequests": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiMultiSelectIO*",
        "name": "ms_io"
      }
    ]
  },
  "Clear": {
    "return_type": "void",
    "args": []
  },
  "Swap": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiSelectionBasicStorage&",
        "name": "r"
      }
    ]
  },
  "SetItemSelected": {
    "return_type": "void",
    "args": [
      {
        "type": "ImGuiID",
        "name": "id"
      },
      {
        "type": "bool",
        "name": "selected"
      }
    ]
  },
  "GetNextSelectedItem": {
    "return_type": "bool",
    "args": [
      {
        "type": "void**",
        "name": "opaque_it"
      },
      {
        "type": "ImGuiID*",
        "name": "out_id"
      }
    ]
  },
  "ClearFreeMemory": {
    "return_type": "void",
    "args": []
  },
  "Split": {
    "return_type": "void",
    "args": [
      {
        "type": "ImDrawList*",
        "name": "draw_list"
      },
      {
        "type": "int",
        "name": "count"
      }
    ]
  },
  "Merge": {
    "return_type": "void",
    "args": [
      {
        "type": "ImDrawList*",
        "name": "draw_list"
      }
    ]
  },
  "SetCurrentChannel": {
    "return_type": "void",
    "args": [
      {
        "type": "ImDrawList*",
        "name": "draw_list"
      },
      {
        "type": "int",
        "name": "channel_idx"
      }
    ]
  },
  "PushClipRectFullScreen": {
    "return_type": "void",
    "args": []
  },
  "PushTexture": {
    "return_type": "void",
    "args": [
      {
        "type": "ImTextureRef",
        "name": "tex_ref"
      }
    ]
  },
  "PopTexture": {
    "return_type": "void",
    "args": []
  },
  "AddLine": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "p1"
      },
      {
        "type": "const ImVec2&",
        "name": "p2"
      },
      {
        "type": "ImU32",
        "name": "col"
      },
      {
        "type": "float thickness =",
        "name": "1.0f"
      }
    ]
  },
  "AddRect": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "p_min"
      },
      {
        "type": "const ImVec2&",
        "name": "p_max"
      },
      {
        "type": "ImU32",
        "name": "col"
      },
      {
        "type": "float rounding =",
        "name": "0.0f"
      },
      {
        "type": "ImDrawFlags flags =",
        "name": "0"
      },
      {
        "type": "float thickness =",
        "name": "1.0f"
      }
    ]
  },
  "AddRectFilled": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "p_min"
      },
      {
        "type": "const ImVec2&",
        "name": "p_max"
      },
      {
        "type": "ImU32",
        "name": "col"
      },
      {
        "type": "float rounding =",
        "name": "0.0f"
      },
      {
        "type": "ImDrawFlags flags =",
        "name": "0"
      }
    ]
  },
  "AddRectFilledMultiColor": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "p_min"
      },
      {
        "type": "const ImVec2&",
        "name": "p_max"
      },
      {
        "type": "ImU32",
        "name": "col_upr_left"
      },
      {
        "type": "ImU32",
        "name": "col_upr_right"
      },
      {
        "type": "ImU32",
        "name": "col_bot_right"
      },
      {
        "type": "ImU32",
        "name": "col_bot_left"
      }
    ]
  },
  "AddQuad": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "p1"
      },
      {
        "type": "const ImVec2&",
        "name": "p2"
      },
      {
        "type": "const ImVec2&",
        "name": "p3"
      },
      {
        "type": "const ImVec2&",
        "name": "p4"
      },
      {
        "type": "ImU32",
        "name": "col"
      },
      {
        "type": "float thickness =",
        "name": "1.0f"
      }
    ]
  },
  "AddQuadFilled": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "p1"
      },
      {
        "type": "const ImVec2&",
        "name": "p2"
      },
      {
        "type": "const ImVec2&",
        "name": "p3"
      },
      {
        "type": "const ImVec2&",
        "name": "p4"
      },
      {
        "type": "ImU32",
        "name": "col"
      }
    ]
  },
  "AddTriangle": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "p1"
      },
      {
        "type": "const ImVec2&",
        "name": "p2"
      },
      {
        "type": "const ImVec2&",
        "name": "p3"
      },
      {
        "type": "ImU32",
        "name": "col"
      },
      {
        "type": "float thickness =",
        "name": "1.0f"
      }
    ]
  },
  "AddTriangleFilled": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "p1"
      },
      {
        "type": "const ImVec2&",
        "name": "p2"
      },
      {
        "type": "const ImVec2&",
        "name": "p3"
      },
      {
        "type": "ImU32",
        "name": "col"
      }
    ]
  },
  "AddCircle": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "center"
      },
      {
        "type": "float",
        "name": "radius"
      },
      {
        "type": "ImU32",
        "name": "col"
      },
      {
        "type": "int num_segments =",
        "name": "0"
      },
      {
        "type": "float thickness =",
        "name": "1.0f"
      }
    ]
  },
  "AddCircleFilled": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "center"
      },
      {
        "type": "float",
        "name": "radius"
      },
      {
        "type": "ImU32",
        "name": "col"
      },
      {
        "type": "int num_segments =",
        "name": "0"
      }
    ]
  },
  "AddNgon": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "center"
      },
      {
        "type": "float",
        "name": "radius"
      },
      {
        "type": "ImU32",
        "name": "col"
      },
      {
        "type": "int",
        "name": "num_segments"
      },
      {
        "type": "float thickness =",
        "name": "1.0f"
      }
    ]
  },
  "AddNgonFilled": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "center"
      },
      {
        "type": "float",
        "name": "radius"
      },
      {
        "type": "ImU32",
        "name": "col"
      },
      {
        "type": "int",
        "name": "num_segments"
      }
    ]
  },
  "AddEllipse": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "center"
      },
      {
        "type": "const ImVec2&",
        "name": "radius"
      },
      {
        "type": "ImU32",
        "name": "col"
      },
      {
        "type": "float rot =",
        "name": "0.0f"
      },
      {
        "type": "int num_segments =",
        "name": "0"
      },
      {
        "type": "float thickness =",
        "name": "1.0f"
      }
    ]
  },
  "AddEllipseFilled": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "center"
      },
      {
        "type": "const ImVec2&",
        "name": "radius"
      },
      {
        "type": "ImU32",
        "name": "col"
      },
      {
        "type": "float rot =",
        "name": "0.0f"
      },
      {
        "type": "int num_segments =",
        "name": "0"
      }
    ]
  },
  "AddText": {
    "return_type": "void",
    "args": [
      {
        "type": "const char*",
        "name": "text"
      },
      {
        "type": "const char* text_end =",
        "name": "NULL"
      }
    ]
  },
  "AddBezierCubic": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "p1"
      },
      {
        "type": "const ImVec2&",
        "name": "p2"
      },
      {
        "type": "const ImVec2&",
        "name": "p3"
      },
      {
        "type": "const ImVec2&",
        "name": "p4"
      },
      {
        "type": "ImU32",
        "name": "col"
      },
      {
        "type": "float",
        "name": "thickness"
      },
      {
        "type": "int num_segments =",
        "name": "0"
      }
    ]
  },
  "AddBezierQuadratic": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "p1"
      },
      {
        "type": "const ImVec2&",
        "name": "p2"
      },
      {
        "type": "const ImVec2&",
        "name": "p3"
      },
      {
        "type": "ImU32",
        "name": "col"
      },
      {
        "type": "float",
        "name": "thickness"
      },
      {
        "type": "int num_segments =",
        "name": "0"
      }
    ]
  },
  "AddPolyline": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2*",
        "name": "points"
      },
      {
        "type": "int",
        "name": "num_points"
      },
      {
        "type": "ImU32",
        "name": "col"
      },
      {
        "type": "ImDrawFlags",
        "name": "flags"
      },
      {
        "type": "float",
        "name": "thickness"
      }
    ]
  },
  "AddConvexPolyFilled": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2*",
        "name": "points"
      },
      {
        "type": "int",
        "name": "num_points"
      },
      {
        "type": "ImU32",
        "name": "col"
      }
    ]
  },
  "AddConcavePolyFilled": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2*",
        "name": "points"
      },
      {
        "type": "int",
        "name": "num_points"
      },
      {
        "type": "ImU32",
        "name": "col"
      }
    ]
  },
  "AddImageRounded": {
    "return_type": "void",
    "args": [
      {
        "type": "ImTextureRef",
        "name": "tex_ref"
      },
      {
        "type": "const ImVec2&",
        "name": "p_min"
      },
      {
        "type": "const ImVec2&",
        "name": "p_max"
      },
      {
        "type": "const ImVec2&",
        "name": "uv_min"
      },
      {
        "type": "const ImVec2&",
        "name": "uv_max"
      },
      {
        "type": "ImU32",
        "name": "col"
      },
      {
        "type": "float",
        "name": "rounding"
      },
      {
        "type": "ImDrawFlags flags =",
        "name": "0"
      }
    ]
  },
  "PathArcTo": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "center"
      },
      {
        "type": "float",
        "name": "radius"
      },
      {
        "type": "float",
        "name": "a_min"
      },
      {
        "type": "float",
        "name": "a_max"
      },
      {
        "type": "int num_segments =",
        "name": "0"
      }
    ]
  },
  "PathArcToFast": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "center"
      },
      {
        "type": "float",
        "name": "radius"
      },
      {
        "type": "int",
        "name": "a_min_of_12"
      },
      {
        "type": "int",
        "name": "a_max_of_12"
      }
    ]
  },
  "PathEllipticalArcTo": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "center"
      },
      {
        "type": "const ImVec2&",
        "name": "radius"
      },
      {
        "type": "float",
        "name": "rot"
      },
      {
        "type": "float",
        "name": "a_min"
      },
      {
        "type": "float",
        "name": "a_max"
      },
      {
        "type": "int num_segments =",
        "name": "0"
      }
    ]
  },
  "PathBezierCubicCurveTo": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "p2"
      },
      {
        "type": "const ImVec2&",
        "name": "p3"
      },
      {
        "type": "const ImVec2&",
        "name": "p4"
      },
      {
        "type": "int num_segments =",
        "name": "0"
      }
    ]
  },
  "PathBezierQuadraticCurveTo": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "p2"
      },
      {
        "type": "const ImVec2&",
        "name": "p3"
      },
      {
        "type": "int num_segments =",
        "name": "0"
      }
    ]
  },
  "PathRect": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "rect_min"
      },
      {
        "type": "const ImVec2&",
        "name": "rect_max"
      },
      {
        "type": "float rounding =",
        "name": "0.0f"
      },
      {
        "type": "ImDrawFlags flags =",
        "name": "0"
      }
    ]
  },
  "AddCallback": {
    "return_type": "void",
    "args": [
      {
        "type": "ImDrawCallback",
        "name": "callback"
      },
      {
        "type": "void*",
        "name": "userdata"
      },
      {
        "type": "size_t userdata_size =",
        "name": "0"
      }
    ]
  },
  "AddDrawCmd": {
    "return_type": "void",
    "args": []
  },
  "PrimReserve": {
    "return_type": "void",
    "args": [
      {
        "type": "int",
        "name": "idx_count"
      },
      {
        "type": "int",
        "name": "vtx_count"
      }
    ]
  },
  "PrimUnreserve": {
    "return_type": "void",
    "args": [
      {
        "type": "int",
        "name": "idx_count"
      },
      {
        "type": "int",
        "name": "vtx_count"
      }
    ]
  },
  "PrimRect": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "a"
      },
      {
        "type": "const ImVec2&",
        "name": "b"
      },
      {
        "type": "ImU32",
        "name": "col"
      }
    ]
  },
  "PrimRectUV": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "a"
      },
      {
        "type": "const ImVec2&",
        "name": "b"
      },
      {
        "type": "const ImVec2&",
        "name": "uv_a"
      },
      {
        "type": "const ImVec2&",
        "name": "uv_b"
      },
      {
        "type": "ImU32",
        "name": "col"
      }
    ]
  },
  "PrimQuadUV": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "a"
      },
      {
        "type": "const ImVec2&",
        "name": "b"
      },
      {
        "type": "const ImVec2&",
        "name": "c"
      },
      {
        "type": "const ImVec2&",
        "name": "d"
      },
      {
        "type": "const ImVec2&",
        "name": "uv_a"
      },
      {
        "type": "const ImVec2&",
        "name": "uv_b"
      },
      {
        "type": "const ImVec2&",
        "name": "uv_c"
      },
      {
        "type": "const ImVec2&",
        "name": "uv_d"
      },
      {
        "type": "ImU32",
        "name": "col"
      }
    ]
  },
  "_SetDrawListSharedData": {
    "return_type": "void",
    "args": [
      {
        "type": "ImDrawListSharedData*",
        "name": "data"
      }
    ]
  },
  "_ResetForNewFrame": {
    "return_type": "void",
    "args": []
  },
  "_ClearFreeMemory": {
    "return_type": "void",
    "args": []
  },
  "_PopUnusedDrawCmd": {
    "return_type": "void",
    "args": []
  },
  "_TryMergeDrawCmds": {
    "return_type": "void",
    "args": []
  },
  "_OnChangedClipRect": {
    "return_type": "void",
    "args": []
  },
  "_OnChangedTexture": {
    "return_type": "void",
    "args": []
  },
  "_OnChangedVtxOffset": {
    "return_type": "void",
    "args": []
  },
  "_SetTexture": {
    "return_type": "void",
    "args": [
      {
        "type": "ImTextureRef",
        "name": "tex_ref"
      }
    ]
  },
  "_PathArcToFastEx": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "center"
      },
      {
        "type": "float",
        "name": "radius"
      },
      {
        "type": "int",
        "name": "a_min_sample"
      },
      {
        "type": "int",
        "name": "a_max_sample"
      },
      {
        "type": "int",
        "name": "a_step"
      }
    ]
  },
  "_PathArcToN": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "center"
      },
      {
        "type": "float",
        "name": "radius"
      },
      {
        "type": "float",
        "name": "a_min"
      },
      {
        "type": "float",
        "name": "a_max"
      },
      {
        "type": "int",
        "name": "num_segments"
      }
    ]
  },
  "AddDrawList": {
    "return_type": "void",
    "args": [
      {
        "type": "ImDrawList*",
        "name": "draw_list"
      }
    ]
  },
  "DeIndexAllBuffers": {
    "return_type": "void",
    "args": []
  },
  "ScaleClipRects": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImVec2&",
        "name": "fb_scale"
      }
    ]
  },
  "Create": {
    "return_type": "void",
    "args": [
      {
        "type": "ImTextureFormat",
        "name": "format"
      },
      {
        "type": "int",
        "name": "w"
      },
      {
        "type": "int",
        "name": "h"
      }
    ]
  },
  "DestroyPixels": {
    "return_type": "void",
    "args": []
  },
  "AddRanges": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImWchar*",
        "name": "ranges"
      }
    ]
  },
  "BuildRanges": {
    "return_type": "void",
    "args": [
      {
        "type": "ImVector<ImWchar>*",
        "name": "out_ranges"
      }
    ]
  },
  "RemoveFont": {
    "return_type": "void",
    "args": [
      {
        "type": "ImFont*",
        "name": "font"
      }
    ]
  },
  "CompactCache": {
    "return_type": "void",
    "args": []
  },
  "SetFontLoader": {
    "return_type": "void",
    "args": [
      {
        "type": "const ImFontLoader*",
        "name": "font_loader"
      }
    ]
  },
  "ClearInputData": {
    "return_type": "void",
    "args": []
  },
  "ClearFonts": {
    "return_type": "void",
    "args": []
  },
  "ClearTexData": {
    "return_type": "void",
    "args": []
  },
  "GetTexDataAsAlpha8": {
    "return_type": "void",
    "args": [
      {
        "type": "unsigned char**",
        "name": "out_pixels"
      },
      {
        "type": "int*",
        "name": "out_width"
      },
      {
        "type": "int*",
        "name": "out_height"
      },
      {
        "type": "int* out_bytes_per_pixel =",
        "name": "NULL"
      }
    ]
  },
  "GetTexDataAsRGBA32": {
    "return_type": "void",
    "args": [
      {
        "type": "unsigned char**",
        "name": "out_pixels"
      },
      {
        "type": "int*",
        "name": "out_width"
      },
      {
        "type": "int*",
        "name": "out_height"
      },
      {
        "type": "int* out_bytes_per_pixel =",
        "name": "NULL"
      }
    ]
  },
  "AddCustomRect": {
    "return_type": "ImFontAtlasRectId",
    "args": [
      {
        "type": "int",
        "name": "width"
      },
      {
        "type": "int",
        "name": "height"
      },
      {
        "type": "ImFontAtlasRect* out_r =",
        "name": "NULL"
      }
    ]
  },
  "RemoveCustomRect": {
    "return_type": "void",
    "args": [
      {
        "type": "ImFontAtlasRectId",
        "name": "id"
      }
    ]
  },
  "ClearOutputData": {
    "return_type": "void",
    "args": []
  },
  "GetCharAdvance": {
    "return_type": "float",
    "args": [
      {
        "type": "ImWchar",
        "name": "c"
      }
    ]
  },
  "IsGlyphLoaded": {
    "return_type": "bool",
    "args": [
      {
        "type": "ImWchar",
        "name": "c"
      }
    ]
  },
  "IsGlyphInFont": {
    "return_type": "bool",
    "args": [
      {
        "type": "ImWchar",
        "name": "c"
      }
    ]
  },
  "CalcTextSizeA": {
    "return_type": "ImVec2",
    "args": [
      {
        "type": "float",
        "name": "size"
      },
      {
        "type": "float",
        "name": "max_width"
      },
      {
        "type": "float",
        "name": "wrap_width"
      },
      {
        "type": "const char*",
        "name": "text_begin"
      },
      {
        "type": "const char* text_end =",
        "name": "NULL"
      },
      {
        "type": "const char** out_remaining =",
        "name": "NULL"
      }
    ]
  },
  "RenderChar": {
    "return_type": "void",
    "args": [
      {
        "type": "ImDrawList*",
        "name": "draw_list"
      },
      {
        "type": "float",
        "name": "size"
      },
      {
        "type": "const ImVec2&",
        "name": "pos"
      },
      {
        "type": "ImU32",
        "name": "col"
      },
      {
        "type": "ImWchar",
        "name": "c"
      },
      {
        "type": "const ImVec4* cpu_fine_clip =",
        "name": "NULL"
      }
    ]
  },
  "RenderText": {
    "return_type": "void",
    "args": [
      {
        "type": "ImDrawList*",
        "name": "draw_list"
      },
      {
        "type": "float",
        "name": "size"
      },
      {
        "type": "const ImVec2&",
        "name": "pos"
      },
      {
        "type": "ImU32",
        "name": "col"
      },
      {
        "type": "const ImVec4&",
        "name": "clip_rect"
      },
      {
        "type": "const char*",
        "name": "text_begin"
      },
      {
        "type": "const char*",
        "name": "text_end"
      },
      {
        "type": "float wrap_width =",
        "name": "0.0f"
      },
      {
        "type": "ImDrawTextFlags flags =",
        "name": "0"
      }
    ]
  },
  "AddRemapChar": {
    "return_type": "void",
    "args": [
      {
        "type": "ImWchar",
        "name": "from_codepoint"
      },
      {
        "type": "ImWchar",
        "name": "to_codepoint"
      }
    ]
  },
  "IsGlyphRangeUnused": {
    "return_type": "bool",
    "args": [
      {
        "type": "unsigned int",
        "name": "c_begin"
      },
      {
        "type": "unsigned int",
        "name": "c_last"
      }
    ]
  },
  "SetWindowFontScale": {
    "return_type": "void",
    "args": [
      {
        "type": "float",
        "name": "scale"
      }
    ]
  },
  "Image": {
    "return_type": "void",
    "args": [
      {
        "type": "ImTextureRef",
        "name": "tex_ref"
      },
      {
        "type": "const ImVec2&",
        "name": "image_size"
      },
      {
        "type": "const ImVec2&",
        "name": "uv0"
      },
      {
        "type": "const ImVec2&",
        "name": "uv1"
      },
      {
        "type": "const ImVec4&",
        "name": "tint_col"
      },
      {
        "type": "const ImVec4&",
        "name": "border_col"
      }
    ]
  },
  "GetContentRegionMax": {
    "return_type": "ImVec2",
    "args": []
  },
  "GetWindowContentRegionMin": {
    "return_type": "ImVec2",
    "args": []
  },
  "GetWindowContentRegionMax": {
    "return_type": "ImVec2",
    "args": []
  },
  "SetItemAllowOverlap": {
    "return_type": "void",
    "args": []
  },
  "GetKeyIndex": {
    "return_type": "ImGuiKey",
    "args": [
      {
        "type": "ImGuiKey",
        "name": "key"
      }
    ]
  },
  "CalcListClipping": {
    "return_type": "void",
    "args": [
      {
        "type": "int",
        "name": "items_count"
      },
      {
        "type": "float",
        "name": "items_height"
      },
      {
        "type": "int*",
        "name": "out_items_display_start"
      },
      {
        "type": "int*",
        "name": "out_items_display_end"
      }
    ]
  }
}